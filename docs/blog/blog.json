[
  {
    "path": "blog/2024-01-14-reservas-internacionales-d-bolivia/",
    "title": "Reservas Internacionales de Bolivia 1998-2023",
    "description": "Hoy exploraremos los datos de las Reservas Internacionales de Bolivia (1998-2023) a través de un grafico de barras con {ggplot2}. También realizaremos un análisis del comportamiento de esta variable durante las ultima dos décadas.",
    "author": [
      {
        "name": "Ruddy Quispe Tapia",
        "url": {}
      }
    ],
    "date": "2024-01-14",
    "categories": [
      "articulos de opinion",
      "statistics",
      "visualization"
    ],
    "contents": "\r\n\r\nContents\r\nAnálisis de las Reservas Internacionales de Bolivia\r\nGrafica de las Reservas Internacionales\r\n\r\nAnálisis de las Reservas Internacionales de Bolivia\r\nSegún el Banco Central de Bolivia las reservas internacionales son activos líquidos internacionalmente aceptados como medio de pago, constituidos generalmente en oro, divisas (billetes y monedas, depósitos a la vista, depósitos a plazo y títulos valor), cuya administración y control legal recae en la autoridad monetaria en el caso de Bolivia en el Banco Central.\r\nResultado del grafico realizado con ggplot2A partir del año 2005 gran parte de las economías del mundo experimentaron un incremento significativo en las reservas internacionales incluyendo los países emergentes de América Latina. Este aumento importante obedeció básicamente al contexto favorable.\r\nA partir del 2006 hasta el 2014 las Reservas Internacionales de Bolivia en promedio se incrementó en 1,500 millones de dólares por año, este comportamiento creciente entre el 2006-2014, es debido a los ingresos provenientes de las exportaciones de YPFB, alcanzando a registrar su máximo nivel el 2014, 15,123 millones de dólares.\r\nA partir del 2015 las Reservas Internacionales tiende a la baja, principalmente por el descenso de ingresos por las ventas de gas natural a Brasil y Argentina, a causa de una baja en la producción y por falta de exploración, disminuyendo en promedio 1,300 millones de dólares por año, el 2023 Bolivia cierra con 1,709 millones dólares, reduciendo en 79% entre el 1015 y 2023, de los cuales, el oro es 1,576 y el resto que se materializa en divisas alcanza los 166 millones de dólares.\r\nGrafica de las Reservas Internacionales\r\n1. Packages a necesitar\r\nPara comenzar, necesitamos cargar los siguientes packages:\r\n\r\n\r\nlibrary(openxlsx) # Para importar / exportar excel \r\nlibrary(magrittr) # Pipe\r\nlibrary(tidyverse) # Manipulacion de Datos\r\nlibrary(readxl)\r\nlibrary(tidyverse)   ##  (incl. the ggplot2 package)\r\nlibrary(systemfonts) ## fuentes personalizadas (deben estar instaladas en su sistema operativo)\r\nlibrary(scico)       ## c) in R \r\nlibrary(ggtext)      ## agregar representación de texto mejorada a ggplot2\r\nlibrary(ggforce)     ## agrega funcines faltante a ggplot2\r\nlibrary(ggdist)      ## agregar visualizaciones de incertidumbre a ggplot2\r\nlibrary(magick)      ## cargar imágenes en R\r\nlibrary(patchwork)   ## combinar salidas de ggplot2\r\nlibrary(tinter)      ## tinter proporciona una forma sencilla de generar paletas monocromáticas\r\nlibrary(ggthemes)    ## El paquete ggthemes proporciona temas, geoms y escalas adicionales para el paquete ggplot2\r\nlibrary(ggcharts)    ## proporciona una interfaz de alto nivel {ggplot2}para crear gráficos comunes.\r\nlibrary(scales)      ##  crea guías (leyendas y ejes) que puedan usarse para leer el gráfico\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n2. Datos de las Reservas Internacionales\r\nObservemos la base de datos de las Reservas Internacionales extraído del BCB en millones de dólares desde el 1998-2023.Observemos la base de datos de las Reservas Internacionales extraído del BCB en millones de dólares desde el 1998-2023.\r\n\r\nAÑORIN1,9981,0631,9991,1142,0001,0852,0011,0772,0028542,0039762,0041,1232,0051,7142,0063,1782,0075,3192,0087,7222,0098,5802,0109,7302,01112,0192,01213,9272,01314,4302,01415,1232,01513,0562,01610,0812,01710,2612,0188,9462,0196,4682,0205,2762,0214,7522,0223,7962,0231,709Elavoracion propia con datos del BCB.\r\n\r\n3. Creamos una variable (tohighlight)\r\nUna vez cargado los paquetes y datos iniciamos a crear una nueva variable con la función mutate(), creamos la variable tohighlight, por su importancia resaltaremos las gestiones (2014) y (2023), para diferenciar de las demás gestiones.\r\n\r\nX <- data_RIN_2023 %>% mutate(tohighlight = ifelse(AÑO == 2014 | AÑO == 2023, \"yes\", \"no\"))\r\n\r\nUna vez modificado nuestra base de datos se tiene:\r\n\r\nAÑORINtohighlight1,9981,063no1,9991,114no2,0001,085no2,0011,077no2,002854no2,003976no2,0041,123no2,0051,714no2,0063,178no2,0075,319no2,0087,722no2,0098,580no2,0109,730no2,01112,019no2,01213,927no2,01314,430no2,01415,123yes2,01513,056no2,01610,081no2,01710,261no2,0188,946no2,0196,468no2,0205,276no2,0214,752no2,0223,796no2,0231,709yesElavoracion propia con datos del BCB.\r\n\r\n3. Gráfico Simple con ggplot2\r\nCon las modificaciones realizadas, realizamos un gráfico simple con ggplo2.\r\n\r\nres<- ggplot( X, aes( x = AÑO, y = RIN, fill = tohighlight))+\r\n  geom_bar(stat = \"identity\")\r\nres\r\n\r\n##ggsave(\"reser_int2023.pdf\", width = 13, height = 6, device = cairo_pdf)\r\n#geom_rect(xmin=1997, xmax=2005, ymin=-Inf, ymax=5000,  fill=\"cornsilk3\", color=NA)+ \r\n\r\n\r\n4. Grafico final\r\nPara mejorar el grafico anterior, se modificara los colores de las barras con scale_fill_manual(), asi mismo modificaremos los ejes con scale_y_continuous() y scale_x_continuous() para el eje (y) y (x).\r\nLos cuadros de texto se pueden crear con element_textbox() o element_textbox_simple(). Los cuadros de texto se diferencian de las etiquetas creadas con element_markdown() que tienden a tener un ancho específico y envuelven su contenido para que se ajuste a ese ancho.\r\nLa altura de un cuadro de texto normalmente se calcula automáticamente para que coincida con la altura del contenido, pero también es posible establecer la altura explícitamente.\r\n\r\n   res1<- ggplot( X, aes( x = AÑO, y = RIN, fill = tohighlight))+\r\n  geom_bar(stat = \"identity\") +\r\n  scale_fill_manual( values = c( \"yes\"=\"#CD0000\", \"no\"=\"#4682B4\" ), guide = FALSE )+\r\n    scale_y_continuous(label = comma, breaks = seq(0, 20000, by = 1000),expand = c(0,0),limits = c(0,20000))+\r\n    scale_x_continuous(expand = c(0,0),breaks=pretty(X$AÑO, n = 24))+\r\n    labs(\r\n    x = \"AÑO\",\r\n    y = \"(En millones de dolares)\", \r\n    title = \"<span style = 'font-size:19pt; font-family:Helvetica;'><span style =   'color:#0072B2;'>**Reservas**<\/span> **Internacionales de** <span style = 'color:#0072B2;'>**Bolivia 1998-2023**<\/span> <\/span><br> \r\n    (*En millones de Dolares*)\", \r\n    caption = \"Fuente: Elaboración propia con datos del BCB\\n ruddyqt@gmail.com\")+\r\n  #theme_minimal()+\r\n  #theme_igray()+\r\n  theme_solarized()+\r\n  theme(\r\n    text = element_text(family = \"\"),\r\n    plot.title.position = \"plot\",\r\n    axis.text.x = element_text(angle=90, vjust = 0.5),axis.text=element_text(size=10),\r\n    plot.title = element_markdown(size = 11, lineheight = 1.2))+\r\n  geom_text(aes(label = scales::comma(RIN)), hjust = 0, angle = 90,size=3.6)+\r\n   annotate(\"text\", x = Inf, y = 0, label = \"RuddyEc0\", hjust=1.1, vjust=-8.1, col=\"white\", cex=6, fontface = \"bold\", alpha = 0.8)+\r\n  ggtext::geom_textbox(\r\n    data = tibble( x=2002, y = 12000, label = \"<span style='font-size:9pt;font-family:anton;'> A partir de <span style = 'color:#CD0000;'>**1998 hasta el 2005**<\/span> las Reservas Internacionales se encotraba por debajo de <span style = 'color:#0072B2;'> **1,200 millones de dolares**<\/span>, sin embargo entre el 2006 - 2014 las **Reservas Internacionales de Bolivia** en promedio se incrementó en <span style = 'color:#0072B2;'>**1,500 millones de dólares por año.**<\/span>\"),\r\n    aes(x, y, label = label),\r\n    size = 1, family = \"Montserrat\",\r\n    fill = \"cornsilk\", box.color = \"cornsilk3\",\r\n    width = unit(10, \"lines\")\r\n  )\r\nres1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "blog/2024-01-14-reservas-internacionales-d-bolivia/rin.png",
    "last_modified": "2024-02-01T16:08:10-04:00",
    "input_file": "reservas-internacionales-d-bolivia.knit.md"
  },
  {
    "path": "blog/2023-11-25-introduccion-a-r-markdown/",
    "title": "Introduccion a R Markdown",
    "description": "Introduccion a R Markdown.",
    "author": [
      {
        "name": "Ruddy Quispe Tapia",
        "url": {}
      }
    ],
    "date": "2023-10-22",
    "categories": [
      "articulos de opinion",
      "statistics",
      "visualization"
    ],
    "contents": "\r\nIntroduccion a R Mardown\r\nEn esta lección se ofrece una introducción a Markdown, un lenguaje de marcado con sintaxis en texto plano para generar textos con formato. Descubrirás el porqué se utiliza, cómo dar formato a los archivos de Markdown y cómo obtener una vista previa en la web de los documentos formados con Markdown.\r\nDado que las lecciones de The Programming Historian en español deben ser enviadas como archivos Markdown, hemos incluido ejemplos específicos de PH en la medida de lo posible. Espero que esta guía sea útil si estás considerando contribuir con una lección en este sitio.\r\n¿Qué es Markdown?\r\nMarkdown fue desarrollado Jhon Gruber en 2004 por John Gruber, y se refiere tanto a (1) una manera de formar archivos de texto, como a (2) una utilidad del lenguaje de programación Perl para convertir archivos Markdown en HTML. En esta lección nos centraremos en la primera acepción y aprenderemos a escribir archivos utilizando la sintaxis de Markdown.\r\nLos archivos de texto plano tienen muchas ventajas sobre otro tipo de formato. Por un lado, se pueden leer prácticamente en todos los dispositivos. También han resistido la prueba del paso del tiempo mejor que otro tipo de archivos -si alguna vez has intentado abrir un documento guardado en un formato de procesador de textos heredado, estarás familiarizado con los problemas de compatibilidad que implican.\r\nAl utilizar la sintaxis de Markdown, serás capaz de producir archivos que pueden ser legibles como texto plano y que a la vez están listos para ser formados en otras plataformas. Muchos generadores de bitácoras y de sitios estáticos, así como sitios como GitHub, también aceptan Markdown y traducen estos archivos a HTML para su visualización en la web. Además, herramientas como Pandoc pueden convertir archivos en o desde Markdown. Para más información sobre Pandoc puedes consultar la lección sobre Escritura sostenible utilizando Pandoc y Markdown de Dennise Tenen y Grant Wythoff.\r\nSintaxis en Markdowns\r\nLos archivos en Markdown se guardan con la extensión .md y se pueden abrir en un editor de texto como TextEdit, Notepad, Sublime Text o Vim. Muchos sitios web o plataformas de publicación también ofrecen editores basados en la web y/o extensiones para introducir texto utilizando la sintaxis de Markdown.\r\nEn este tutorial vamos a practicar la sintaxis de Markdown en el navegador usando StackEdit. Podrás introducir texto formado en Markdown a la izquierda e inmediatamente ver la versión traducida junto a él a la derecha.\r\nDado que todas las lecciones de The Programming Historian están escritas en Markdown, también podemos examinar sus archivos en StackEdit. Copia el texto en formato markdown de la lección Introducción a la línea de comandos en Bash en el siguiente enlace:\r\nAccede al editor de StackEdit haciendo click en “start writing” (empezar a escribir) en la parte superior de la página y pega el texto de la lección.\r\nVerás que mientras que el panel de la derecha cuenta con una presentación más elegante del texto, el archivo de Markdown a la izquierda es aún bastante legible.\r\nVamos a sumergirnos ahora en la lección escribiendo nuestra propia sintaxis de Markdown. Crea un nuevo documento en StackEdit haciendo click en el ícono de la carpeta en la esquina superior derecha seleccionando “New document”. Debes ponerle nombre al documento en la caja de texto en la parte superior de la página.\r\nEncabezadosencabezados\r\nMarkdown dispone de cuatro niveles de encabezados definidos por el número de # antes del texto del encabezado. Pega los siguientes ejemplos en la caja de texto de la izquierda:\r\n\r\n\r\n# Primer nivel de encabezado\r\n## Segundo nivel de encabezado\r\n### Tercer nivel de encabezado\r\n#### Cuarto nivel de encabezado\r\n\r\n\r\nEl primer y segundo nivel de encabezado también se pueden escribir como sigue:\r\nPrimer nivel de encabezado\r\nSegundo nivel de encabezadosegundo-nivel-de-encabezado\r\nTercer nivel de encabezadotercer-nivel-de-encabezado\r\nCuarto nivel de encabezadocuarto-nivel-de-encabezado\r\nPrimer nivel de encabezado\r\nSegundo nivel de encabezado\r\nObserva que la sintaxis de Markdown sigue siendo comprensible aún en la versión de t\r\nEscribe la siguiente frase en la caja de texto:\r\n¡Bienvenidos a The Programming Historian en español!\r\nHoy aprenderemos la sintaxis de Mardown.\r\nEsta frase está separada de la anterior por un solo salto de línea.\r\nLos párrafos deben estar separados por una línea vacía. Deja una línea entre la que contiene Markdown. y Ésta para que veas cómo trabaja. Los saltos de línea sencillos deben indicarse con dos espacios en blanco en algunas implementaciones de Markdown. Esto no es necesario en la variente de GitHub Flavored Markdown, que es la que utiliza por defecto StackEdit.\r\nAñadir énfasis\r\nEl texto se puede poner en cursivas encerrándolo entre los símbolos * o -. De la misma forma, el texto en negritas se escribe encerrando la palabra entre **o __.\r\nAñade énfasis a una frase utilizando estos métodos\r\n¡Estoy muy entusiasmado con los tutoriales de The Programming Historian en español!\r\nListadoslistados\r\nMarkdown soporta la creación de listas ordenadas y sin ordenar. Escribe la siguiente lista dentro de la caja de texto:\r\nPoner sangría al * te permite crear listas anidadas.\r\nEsto se depliega así:\r\nLista de compras\r\nFrutas\r\nManzanas\r\nNaranjas\r\nUvas\r\n\r\nLácteos\r\nLeche\r\nQueso\r\n\r\nLas listas ordenadas se escriben numerando cada línea. Una vez más, el objetivo de Markdown es producir documentos que sean legibles como texto plano y que a la vez puedan traducirse a otros formatos\r\nLista de pendientes\r\nTerminar el tutorial de Markdown\r\nIr a la tienda de abarrotes\r\nPreparar el almuerzo\r\nFragmentos de código (snippets)\r\nRepresentar fragmentos de código en forma distinta al resto del documento es una buena práctica que lo hace más legible. La escritura de código se representa generalmente a espacio sencillo. Dado que Markdown no distingue las tipografías involucradas, representamos los fragmentos de código encerrados entre dos signos de acento grave . Por ejemplo:`. Cuando queremos representar un bloque completo de código lo debemos encerrar entre dos líneas de tres acentos graves. En la ventana de vista previa de StackEdit esto se representará como una caja de texto sombreada y escrita a espacio seguido.\r\n<html>\r\n    <head>\r\n        <title>Título del sitio Web<\/title>\r\n    <\/head>\r\n    <body>\r\n    <\/body>\r\n<\/html>\r\nBloque de citas\r\nEscribe el siguiente texto en la caja de texto:\r\n\r\nHola. Éste es un párrafo de texto incluido en un bloque de cita. Fíjate que tengo una sangría con respecto al margen izquierdo.\r\n\r\nEnlaces de Internet\r\nLos enlaces de Internet se pueden escribir de dos maneras.\r\nEl título del enlace se encierra primero entre corchetes y después se incluye la dirección completa del URL entre paréntesis.\r\nPara más tutoriales visita la página The Programming Historian en español.\r\nLo cual se representa así:\r\nPara más tutoriales visita la página The Programming Historian en español.\r\nLos enlaces también se utilizan para crear notas a pie de página y son útiles porque, además, ayudan a mantener más ordenado tu documento en texto plano. Las notas a pie se escriben con un par adicional de corchetes con el número de referencia para establecer el vínculo que identifique la etiqueta.\r\nUn ejemplo es el sitio [The Programming Historian en español][1]\r\nEntonces puedes incluir el URL en otra parte del documento:\r\nhttp://programminghistorian.org/\r\nLo cual se despliega de la siguiente manera:\r\nUn ejemplo es el sitio The Programming Historian en español\r\nImágenesimágenes\r\nSe pueden referir las imágenes mediante el uso de !, seguido de un texto alternativo entre corchetes, seguido a su vez por el URL de la imagen y un título opcional entre comillas. Esto no se representará como texto en tu documento pero te permitirá incluir la imagen en la visualización de una página en HTML.\r\nLogo de WikipediaReglas y líneas horizontales\r\nPuedes incluir líneas horizontales si escribes en una misma línea cualquiera de los siguientes tres signos: -. * o _, sin importar los espacios que dejes entre ellos. Cualquiera de estas combinaciones generarán una línea horizontal:\r\n*\r\n*\r\n*\r\n\r\n\r\n\r\n##\r\n##\r\nT\r\nab\r\nla\r\ns\r\nLa versión básica de Markdown no incluye tablas; sin embargo, algunos sitios web y aplicaciones usan variantes de Markdown que pueden incluir tablas y otras características especiales. GitHub Flavored Markdown es una de estas variantes y es utilizado para visualizar archivos .md en el navegador del sitio de GitHub.\r\nEncabezado 1\r\nEncabezado 2\r\nEncabezado 3\r\nrenglón 1, columna 1\r\nrenglón 1, columna 2\r\nrenglón 1, columna 3\r\nrenglón 2, columna 1\r\nrenglón 2, columna 2\r\nrenglón 2, columna 3\r\nrenglón 3, columna 1\r\nrenglón 3, columna 2\r\nrenglón 3, columna 3\r\nPara crear una tabla en GitHub, usa barras verticales |para separar columnas y guiones entre los encabezados y el resto del contenido de la tabla. Dado que las barras verticales son sólo estrictamente necesarias entre columnas, puedes usarlas en los extremos de la tabla para darle una vista más acabada. Las celdas pueden tener contenido de cualquier extensión, y no es necesario que las barras verticales estén alineadas verticalmente entre sí.\r\nPara especificar la alineación del contenido de cada columna se pueden agregar dos puntos :al renglón de los encabezados como sigue:\r\nAlineado-izquierda\r\nCentrado\r\nAlineado-derecha\r\nManzanas\r\nrojo\r\n5000\r\nPlátanos\r\namarillo\r\n75\r\nLimitaciones de Markdown\r\nAunque Markdown se está haciendo cada vez más popular, particularmente para los documentos con formato que se pueden ver en la web, muchas persones y editores siguen solicitando archivos tradicionales en Word, PDF y otros formatos. Esto puede arreglarse en parte utilizando herramientas de conversión en línea como Pandoc. No obstante, algunas características de los procesadores de texto, como la de control de cambios, no tienen soporte aún. Por favor, visita la lección de Programming Historian en español sobre Escritura sostenible en texto plano usando Pandoc y Markdown para mayor información sobre Pandoc.\r\nConclusiones\r\nMarkdown es un término medio muy útil entre los archivos de texto plano sin estilo y los documentos de procesadores de texto heredados. Su sintaxis simple se aprende rápidamente y es altamente legible en el mismo documento y cuando se transforma en HTML u otro tipo de documentos. En conclusión, escribir tus documentos en Markdown significa que serán capaces de ser utilizados y leídos a largo plazo.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2023-12-03T18:41:15-04:00",
    "input_file": {}
  },
  {
    "path": "blog/2023-11-26-introduccion-a-ggplot2/",
    "title": "Introduccion a ggplot2",
    "description": "Introduccion a graficos con ggplot2.",
    "author": [
      {
        "name": "Ruddy Quispe Tapia",
        "url": {}
      }
    ],
    "date": "2023-10-22",
    "categories": [
      "articulos de opinion",
      "statistics",
      "visualization"
    ],
    "contents": "\r\n\r\nContents\r\nggplot2\r\nLayered Grammar of graphics\r\nCosas que hace ggplot y cosas que no\r\nFuncionamiento básico\r\nGráficos de Barras (Barplot)\r\n\r\n\r\nEste documento quiere servir de apoyo a las sesiones de Visual Analytics del Programa Big Data & Business Intelligence de la Universidad de Deusto. Como tal, es un documento en estado constante de revisión y ampliación.\r\nEstos apuntes no pretenden ser una documentación exhaustiva de ggplot2; la idea es transmitir los entresijos básicos del funcionamiento de ggplot2.\r\nggplot2\r\nggplot2 es un paquete parte de Tidyverse para crear gráficos estáticos. En los siguientes ejemplos usaremos algún otro paquete del Tidyverse, por lo que cargaremos el metapaquete entero (o<tra opción sería cargar sólo los paquetes que vayamos a usar: ggplot2, dplyr…)\r\nLayered Grammar of graphics\r\nEn 2010 Hadley Wickham publicó el artículo “A layered grammar of graphics”, basado en la Grammar of graphics de Wilkinson y en la que se basa ggplot.\r\nDicha gramática por capas consta de los siguientes elementos:\r\nDATA: ggplot espera como entrada un conjunto de datos limpio (tidy data) como entrada. Además, dependiendo del tipo de gráfica que queramos crear, tendremos que crear algún resumen de datos agregados, o incluso reestructurar el conjunto de datos original. Podemos usar conjuntos de datos distintos para capas distintas.\r\nGEOM: elemento gráfico al que se van a mapear las variables del conjunto de datos: líneas, puntos…\r\nSTATS: transformaciones estadísticas de los datos.\r\nPOSTION: ajustes para evitar que las marcas se superpongan.\r\nCOORDINATE: por defecto ggplot aplicará coordenadas cartesianas al gráfico, pero podemos modificar las escalas, así como el sistema de coordenadas (por ejemplo, a un sistema polar)\r\nFACET: para poder crear small multiples.\r\nTHEMING: funciones y argumentos relacionados con aspectos gráficos a los datos propiamente dichos: tipografía, fondo, aspecto de los ejes…\r\nCosas que hace ggplot y cosas que no\r\nggplot es una herramienta muy versátil para crear todo tipo de gráficos estáticos.\r\nAdemás es extensible, por lo que existe una comunidad de extensiones que amplian las funciones existentes en ggplot para facilitar crear determinados gráficos.\r\nSin embargo, ggplot no tiene:\r\nInteractividad: filtros… Podemos usar el paquete ggvis (en desarrollo), o montar una app con Shiny.\r\nAnimaciones. aunque están desarrollando una Grammar of animated graphics con gganimate.\r\nFuncionamiento básico\r\nCarga inicial de datos\r\nCargamos el conjunto de datos diamonds que incluye ggplot2 y echamos un vistazo a su estructura (más información sobre las variables):\r\nGráficos de Barras (Barplot)\r\nUno de los tipos de gráficos más comunes en el anállisis de datos es el gráfico de barras, en el que simplemente se representa con barras de distintas “alturas” las dimensiones de una cantidad numérica comparada con otra. Por ejemplo, tomemos como dataset inicial el mtcars, cuyos primeros valores son:\r\n\r\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\r\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\r\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\r\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\r\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\r\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\r\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\r\n\r\nY que contiene información técnica de distintos tipos de marca y modelos de vehículos.\r\nGrafiquemos entonces el total de autos en el dataset agrupados por la cantidad de “cambios o velocidades” (columna ‘gear’):\r\n\r\n\r\n\r\n\r\n\r\n\r\nComo se observa en el ejemplo, todo gráfico hecho con ggplot debe tener un primer argumento ggplot() en donde debe especificarse cuál es el dataset que contiene la información que se desea graficar. Esta representa la primera capa que guarda la información del conjunto de datos de partida. Con el argumento data = mtcars se establece que el dataset es el indicado, y en términos de R este conjunto de datos puede ser cualquier dataframe construido o cargado previamente. Luego, se observa en el ejemplo el comando aes(), que se refiere a la “estética” del gráfico, es decir, en este caso se especifica o “mapea” cuál variable del conjunto de datos es el que se va a representar en el eje “x”. Una vez completada esta función, se agrega una segunda capa usando el operador + , y luego se establece que el gráfico a construir es de tipo barra con la función geom_bar(). Con solo esos argumentos es suficiente para producir el gráfico mostrado en el ejemplo. Ahora bien, aunque el gráfico enumera las cantidades de autos con 3, 4 y 5 velocidades que forman parte del conjunto de datos, vamos a modificar ciertas características visuales iniciales a fin de obtener un resultado final más agradable. Por ejemplo, cambiemos las etiquetas de los ejes y agregemos un título al gráfico:\r\n\r\n\r\n\r\nObsérvese que esto se logra agregrando capas con el operador + , e incorporando los elementos deseados. El gráfico luce mucho mejor, pero tal vez el color gris por defecto no resulta muy atractivo. Si lo deseamos, podemos cambiar el color con el que se representan tanto el área interior de las barras, como su borde, colocando explícitamente los valores dentro de la función geom_bar():\r\n\r\n\r\n\r\nComo referencia para los nombres de los colores usados, recomiendo revisar el siguiente link.\r\nY si el gráfico lo amerita, podemos también cambiar la orientación de los ejes haciendo uso de la función coord_flip():\r\n\r\n\r\n\r\nAhora bien, si deseamos que cada grupo de datos (velocidades, en este caso) tenga colores distintos, basta con asignar, dentro de la “estética”, el color como parámetro, y mapearlo a alguna variable. En este caso, al propio valor de “gear”, pero dicho valor debe ser convertido antes a una variable tipo factor, es decir, una variable categórica:\r\n\r\n\r\n\r\nEn este caso, se introdujo la función labs(fill = … ) para cambiar el título de la leyenda. De lo contrario, en dicha leyenda aparecería as.factor(gear).\r\nSi queremos, adicionalmente, cambiar el estilo del fondo, podemos hacerlo seleccionando el “tema” de visualización de la siguiente manera:\r\n\r\n\r\n\r\nPor último (y esto es aplicable a cualquier otro gráfico que mostremos a lo largo de todo el ejercicio práctico), es importante mencionar que cualquier indicación de parámetros (por ejemplo, la “estética”) que coloquemos en la función ggplot(), será sobreescrita si modificamos los argumentos de la función geom_… posterior. Es decir, veamos el siguiente ejemplo:\r\n\r\n\r\n\r\nComo puede observarse, aún cuando en la primera función se estableció el relleno de las barras en función de los valores de la variable ‘gear’, al fijar el color y el relleno de nuevo en la función geom_bar() se tomará esta última como aquella a aplicar al gráfico.\r\n\r\n\r\n\r\n",
    "preview": "blog/2023-11-26-introduccion-a-ggplot2/introduccion-a-ggplot2_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2023-12-03T22:21:02-04:00",
    "input_file": {}
  }
]
